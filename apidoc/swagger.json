{
  "swagger": "2.0",
  "info": { "contact": {}, "title": "gitsast", "version": "1.0.0" },
  "basePath": "%7B%7Bdomain%7D%7D",
  "paths": {
    "/api/v1/repository": {
      "get": {
        "consumes": ["text/plain"],
        "produces": ["application/json"],
        "parameters": [
          { "in": "query", "name": "name", "type": "string" },
          { "in": "query", "name": "remote_url", "type": "string" },
          { "in": "query", "name": "limit", "type": "string" },
          { "in": "query", "name": "offset", "type": "string" },
          {
            "in": "body",
            "name": "body",
            "schema": { "format": "binary", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "list repository",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            },
            "schema": {
              "properties": {
                "repositories": {
                  "example": [
                    {
                      "created_at": "2023-02-22T04:58:59.794583Z",
                      "id": "7e898d91-0cf8-4c03-a7ec-67f2f0a0f034",
                      "name": "voluptatibus",
                      "remote_url": "https://github.com/mdlayher/wireguard_exporter.git",
                      "updated_at": "2023-02-22T04:58:59.794583Z"
                    },
                    {
                      "created_at": "2023-02-22T04:59:31.941957Z",
                      "id": "235025e4-73d7-4294-8ecd-06d9a71d2015",
                      "name": "expedita",
                      "remote_url": "https://github.com/mdlayher/wireguard_exporter.git",
                      "updated_at": "2023-02-22T04:59:31.941957Z"
                    },
                    {
                      "created_at": "2023-02-22T04:59:45.723021Z",
                      "id": "bb42beea-4118-4885-8f88-f291aa0fe790",
                      "name": "atque",
                      "remote_url": "https://github.com/mdlayher/wireguard_exporter.git",
                      "updated_at": "2023-02-22T04:59:45.723021Z"
                    }
                  ],
                  "items": {
                    "properties": {
                      "created_at": {
                        "example": "2023-02-22T04:58:59.794583Z",
                        "type": "string"
                      },
                      "id": {
                        "example": "7e898d91-0cf8-4c03-a7ec-67f2f0a0f034",
                        "type": "string"
                      },
                      "name": { "example": "voluptatibus", "type": "string" },
                      "remote_url": {
                        "example": "https://github.com/mdlayher/wireguard_exporter.git",
                        "type": "string"
                      },
                      "updated_at": {
                        "example": "2023-02-22T04:58:59.794583Z",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "total": { "example": 3, "type": "number" }
              },
              "type": "object"
            }
          }
        },
        "description": "list repository",
        "operationId": "listRepository",
        "summary": "list repository"
      },
      "post": {
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": { "example": "", "type": "string" },
                "remote_url": {
                  "example": "https://github.com/mdlayher/wireguard_exporter",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "add repository",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "example": "2023-02-22T04:59:45.723021Z",
                  "type": "string"
                },
                "id": {
                  "example": "bb42beea-4118-4885-8f88-f291aa0fe790",
                  "type": "string"
                },
                "name": { "example": "atque", "type": "string" },
                "remote_url": {
                  "example": "https://github.com/mdlayher/wireguard_exporter.git",
                  "type": "string"
                },
                "updated_at": {
                  "example": "2023-02-22T04:59:45.723021Z",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "add repository",
        "operationId": "addRepository",
        "summary": "add repository"
      }
    },
    "/api/v1/repository/{id}": {
      "parameters": [
        { "in": "path", "name": "id", "required": true, "type": "string" }
      ],
      "delete": {
        "consumes": ["text/plain"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "format": "binary", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "remove repository by ID",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            }
          }
        },
        "description": "remove repository by ID",
        "operationId": "removeRepositoryById",
        "summary": "remove repository by ID"
      },
      "get": {
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "get repository by ID",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "example": "2023-02-22T04:59:45.723021Z",
                  "type": "string"
                },
                "id": {
                  "example": "bb42beea-4118-4885-8f88-f291aa0fe790",
                  "type": "string"
                },
                "name": { "example": "atque", "type": "string" },
                "remote_url": {
                  "example": "https://github.com/mdlayher/wireguard_exporter.git",
                  "type": "string"
                },
                "updated_at": {
                  "example": "2023-02-22T04:59:45.723021Z",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "get repository by ID",
        "operationId": "getRepositoryById",
        "summary": "get repository by ID"
      },
      "put": {
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": { "example": "", "type": "string" },
                "remote_url": { "example": "github.com//", "type": "string" }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "update repository by ID",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            }
          }
        },
        "description": "update repository by ID",
        "operationId": "updateRepositoryById",
        "summary": "update repository by ID"
      }
    },
    "/api/v1/repository/{id}/report": {
      "parameters": [
        { "in": "path", "name": "id", "required": true, "type": "string" }
      ],
      "get": {
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "get report by repository ID",
            "headers": {
              "Date": { "type": "string" },
              "Transfer-Encoding": { "type": "string" }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "example": "2023-02-23T15:14:05.673514Z",
                  "type": "string"
                },
                "enqueue_at": {
                  "example": "2023-02-23T15:14:05.6767Z",
                  "type": "string"
                },
                "findings": {
                  "example": [
                    {
                      "location": {
                        "path": "/parse.go",
                        "position": { "begin": { "line": 13 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 66 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 67 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 68 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 69 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 70 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 71 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 72 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 73 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 74 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 75 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 76 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 77 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 78 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 37 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 49 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 32 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 39 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 47 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 51 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 32 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 39 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 47 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    },
                    {
                      "location": {
                        "path": "/parse_test.go",
                        "position": { "begin": { "line": 51 } }
                      },
                      "metadata": {
                        "description": "A secret starts with the prefix public_key",
                        "severity": "LOW"
                      },
                      "ruleId": "G001",
                      "type": "sast"
                    }
                  ],
                  "items": {
                    "properties": {
                      "location": {
                        "properties": {
                          "path": { "example": "/parse.go", "type": "string" },
                          "position": {
                            "properties": {
                              "begin": {
                                "properties": {
                                  "line": { "example": 13, "type": "number" }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "metadata": {
                        "properties": {
                          "description": {
                            "example": "A secret starts with the prefix public_key",
                            "type": "string"
                          },
                          "severity": { "example": "LOW", "type": "string" }
                        },
                        "type": "object"
                      },
                      "ruleId": { "example": "G001", "type": "string" },
                      "type": { "example": "sast", "type": "string" }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "finished_at": {
                  "example": "2023-02-23T15:14:07.121661Z",
                  "type": "string"
                },
                "id": {
                  "example": "78589fe4-8365-4c86-9b78-3401ab7f35a3",
                  "type": "string"
                },
                "repository_id": {
                  "example": "1336634e-73f4-438a-ab3a-152d52f071d9",
                  "type": "string"
                },
                "started_at": {
                  "example": "2023-02-23T15:14:05.691266Z",
                  "type": "string"
                },
                "status": { "example": "success", "type": "string" },
                "updated_at": {
                  "example": "2023-02-23T15:14:07.121661Z",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "get report by repository ID",
        "operationId": "getReportByRepositoryId",
        "summary": "get report by repository ID"
      }
    },
    "/api/v1/repository/{id}/scan": {
      "parameters": [
        { "in": "path", "name": "id", "required": true, "type": "string" }
      ],
      "post": {
        "consumes": ["text/plain"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": { "format": "binary", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "trigger  repository scan by ID",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "example": "2023-02-22T11:59:58.935452+07:00",
                  "type": "string"
                },
                "enqueue_at": {
                  "example": "2023-02-22T11:59:58.938824+07:00",
                  "type": "string"
                },
                "finished_at": {
                  "example": "0001-01-01T00:00:00Z",
                  "type": "string"
                },
                "id": {
                  "example": "62b8b624-4588-4f83-8d61-87bc3a560276",
                  "type": "string"
                },
                "repository_id": {
                  "example": "bb42beea-4118-4885-8f88-f291aa0fe790",
                  "type": "string"
                },
                "started_at": {
                  "example": "0001-01-01T00:00:00Z",
                  "type": "string"
                },
                "status": { "example": "enqueued", "type": "string" },
                "updated_at": {
                  "example": "2023-02-22T11:59:58.935452+07:00",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "description": "trigger  repository scan by ID",
        "operationId": "triggerRepositoryScanById",
        "summary": "trigger  repository scan by ID"
      }
    },
    "/health": {
      "get": {
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "health check",
            "headers": {
              "Content-Length": { "type": "string" },
              "Date": { "type": "string" }
            },
            "schema": {
              "properties": { "status": { "example": "ok", "type": "string" } },
              "type": "object"
            }
          }
        },
        "description": "health check",
        "operationId": "healthCheck",
        "summary": "health check"
      }
    }
  },
  "tags": []
}
